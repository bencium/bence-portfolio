{{#if needsAuth}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Portfolio</title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        /* Admin Light Theme Override */
        :root {
            --primary: #ffffff;
            --bg-card: #f8fafc;
            --border: #e2e8f0;
            --text: #1a202c;
            --text-dim: #4a5568;
            --bg-secondary: #f7fafc;
            --accent: #3182ce;
            --secondary: #805ad5;
        }
        
        body {
            background: #f7fafc;
            color: #1a202c;
        }
    </style>
</head>
<body>
    <div class="container">
        <div style="text-align: center; margin-top: 10vh;">
            <h1>Authentication Required</h1>
            <p>Please <a href="/admin/login">login</a> to access the admin dashboard.</p>
        </div>
    </div>
</body>
</html>
{{else}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Portfolio</title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        /* Admin Light Theme Override */
        :root {
            --primary: #ffffff;
            --bg-card: #f8fafc;
            --border: #e2e8f0;
            --text: #1a202c;
            --text-dim: #4a5568;
            --bg-secondary: #f7fafc;
            --accent: #3182ce;
            --secondary: #805ad5;
            --warm-gray: #e2e8f0;
            --warm-gray-light: #f1f5f9;
            --cream-bg: #ffffff;
            --text-primary: #1a202c;
            --accent-orange: #3182ce;
        }
        
        body {
            background: #f7fafc;
            color: #1a202c;
        }
        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: var(--space-xl);
            padding-bottom: var(--space-lg);
            border-bottom: 1px solid var(--warm-gray);
        }
        .admin-nav {
            display: flex;
            gap: var(--space-lg);
        }
        .admin-nav a {
            text-decoration: none;
            color: var(--text-primary);
        }
        .admin-nav a:hover {
            color: var(--accent-orange);
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: var(--space-lg);
            margin-bottom: var(--space-2xl);
        }
        .stat-card {
            padding: var(--space-lg);
            background: var(--warm-gray-light);
            text-align: center;
        }
        .stat-number {
            font-size: var(--font-size-2xl);
            font-weight: 500;
            color: var(--accent-orange);
        }
        .admin-section {
            margin-bottom: var(--space-2xl);
        }
        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: var(--space-lg);
        }
        .btn {
            padding: var(--space-sm) var(--space-lg);
            background: var(--accent-orange);
            color: white;
            border: none;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }
        .btn:hover {
            background: #c44422;
        }
        .btn-secondary {
            background: var(--warm-gray);
            color: var(--text-primary);
        }
        .btn-secondary:hover {
            background: #999;
        }
        .btn-danger {
            background: #dc2626;
        }
        .btn-danger:hover {
            background: #b91c1c;
        }
        .project-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: var(--space-lg);
        }
        .project-table th,
        .project-table td {
            padding: var(--space-md);
            text-align: left;
            border-bottom: 1px solid var(--warm-gray);
        }
        .project-table th {
            background: var(--warm-gray-light);
            font-weight: 500;
        }
        .project-actions {
            display: flex;
            gap: var(--space-sm);
        }
        .form-container {
            background: var(--warm-gray-light);
            padding: var(--space-xl);
            margin-bottom: var(--space-xl);
            display: none;
        }
        .form-container.active {
            display: block;
        }
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: var(--space-lg);
        }
        .form-group {
            display: flex;
            flex-direction: column;
            gap: var(--space-sm);
        }
        .form-group.full-width {
            grid-column: 1 / -1;
        }
        .form-input,
        .form-textarea,
        .form-select {
            padding: var(--space-md);
            border: 2px solid var(--warm-gray);
            background: var(--cream-bg);
            color: var(--text-primary);
            font-size: var(--font-size-base);
        }
        .form-input:focus,
        .form-textarea:focus,
        .form-select:focus {
            outline: none;
            border-color: var(--accent-orange);
        }
        .form-textarea {
            min-height: 100px;
            resize: vertical;
        }
        .tech-tags {
            display: flex;
            flex-wrap: wrap;
            gap: var(--space-xs);
            margin-top: var(--space-sm);
        }
        .tech-tag {
            padding: var(--space-xs) var(--space-sm);
            background: var(--warm-gray);
            color: var(--text-primary);
            font-size: var(--font-size-sm);
        }
        .category-badge {
            padding: var(--space-xs) var(--space-sm);
            font-size: var(--font-size-sm);
            color: white;
            border-radius: 4px;
        }
        .category-healthcare { background: #059669; }
        .category-research { background: #0EA5E9; }
        .category-automation { background: #7C3AED; }
        .category-webapp { background: #DC2626; }
        .category-business { background: #EA580C; }
        .category-tools { background: #65A30D; }
        .category-analytics { background: #0891B2; }
        .category-design { background: #C2410C; }
    </style>
</head>
<body>
    <div class="container">
        <header class="admin-header">
            <h1>Admin Dashboard</h1>
            <div class="admin-nav">
                <a href="/">‚Üê Back to Site</a>
                <form method="POST" action="/admin/logout" style="display: inline;">
                    <button type="submit" class="btn btn-secondary">Logout</button>
                </form>
            </div>
        </header>

        <!-- Statistics -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number">{{totalProjects}}</div>
                <div>Total Projects</div>
            </div>
            {{#each categories}}
            <div class="stat-card">
                <div class="stat-number">{{projectCount}}</div>
                <div>{{name}}</div>
            </div>
            {{/each}}
        </div>

        <!-- Add New Project Form -->
        <div class="admin-section">
            <div class="section-header">
                <h2>Add New Project</h2>
                <button type="button" class="btn" onclick="toggleForm('add-form')">
                    + New Project
                </button>
            </div>
            
            <div id="add-form" class="form-container">
                <form id="project-form" onsubmit="handleProjectSubmit(event)">
                    <div class="form-grid">
                        <div class="form-group">
                            <label>Project ID</label>
                            <input type="text" name="id" class="form-input" placeholder="auto-generated from title" />
                        </div>
                        <div class="form-group">
                            <label>Category</label>
                            <select name="category" class="form-select" required>
                                <option value="">Select Category</option>
                                {{#each categories}}
                                <option value="{{id}}">{{name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="form-group full-width">
                            <label>Project Title</label>
                            <input type="text" name="title" class="form-input" required />
                        </div>
                        <div class="form-group full-width">
                            <label>Description</label>
                            <textarea name="description" class="form-textarea" required></textarea>
                        </div>
                        <div class="form-group">
                            <label>Technologies (comma-separated)</label>
                            <input type="text" name="technologies" class="form-input" placeholder="React, TypeScript, Node.js" />
                        </div>
                        <div class="form-group">
                            <label>
                                <input type="checkbox" name="featured" /> Featured Project
                            </label>
                        </div>
                    </div>
                    <div style="margin-top: var(--space-lg); display: flex; gap: var(--space-md);">
                        <button type="submit" class="btn">Add Project</button>
                        <button type="button" class="btn btn-secondary" onclick="toggleForm('add-form')">Cancel</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Edit Project Form -->
        <div class="admin-section">
            <div class="section-header">
                <h2>Edit Project</h2>
                <button type="button" class="btn btn-secondary" onclick="hideEditForm()">
                    Cancel Edit
                </button>
            </div>
            
            <div id="edit-form" class="form-container">
                <form id="edit-project-form" onsubmit="handleEditSubmit(event)">
                    <input type="hidden" id="edit-project-id" name="id" />
                    <div class="form-grid">
                        <div class="form-group">
                            <label>Project ID</label>
                            <input type="text" id="edit-id" name="display-id" class="form-input" disabled />
                        </div>
                        <div class="form-group">
                            <label>Category</label>
                            <select id="edit-category" name="category" class="form-select" required>
                                <option value="">Select Category</option>
                                {{#each categories}}
                                <option value="{{id}}">{{name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="form-group full-width">
                            <label>Project Title</label>
                            <input type="text" id="edit-title" name="title" class="form-input" required />
                        </div>
                        <div class="form-group full-width">
                            <label>Description</label>
                            <textarea id="edit-description" name="description" class="form-textarea" required></textarea>
                        </div>
                        <div class="form-group">
                            <label>Technologies (comma-separated)</label>
                            <input type="text" id="edit-technologies" name="technologies" class="form-input" placeholder="React, TypeScript, Node.js" />
                        </div>
                        <div class="form-group">
                            <label>
                                <input type="checkbox" id="edit-featured" name="featured" /> Featured Project
                            </label>
                        </div>
                    </div>
                    <div style="margin-top: var(--space-lg); display: flex; gap: var(--space-md);">
                        <button type="submit" class="btn">Update Project</button>
                        <button type="button" class="btn btn-secondary" onclick="hideEditForm()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Projects List -->
        <div class="admin-section">
            <div class="section-header">
                <h2>All Projects</h2>
                <button type="button" class="btn btn-secondary" onclick="refreshProjects()">
                    Refresh
                </button>
            </div>

            <table class="project-table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Technologies</th>
                        <th>Featured</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="projects-list">
                    {{#each projects}}
                    <tr>
                        <td>{{title}}</td>
                        <td>
                            <span class="category-badge category-{{category}}">{{category}}</span>
                        </td>
                        <td>
                            <div class="tech-tags">
                                {{#each technologies}}
                                <span class="tech-tag">{{this}}</span>
                                {{/each}}
                            </div>
                        </td>
                        <td>{{#if featured}}Yes{{else}}No{{/if}}</td>
                        <td>
                            <div class="project-actions">
                                <button class="btn btn-secondary" onclick="editProject('{{id}}')">Edit</button>
                                <button class="btn btn-danger" onclick="deleteProject('{{id}}')">Delete</button>
                            </div>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function toggleForm(formId) {
            const form = document.getElementById(formId);
            form.classList.toggle('active');
        }

        async function handleProjectSubmit(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            
            const projectData = {
                id: formData.get('id') || undefined,
                title: formData.get('title'),
                description: formData.get('description'),
                category: formData.get('category'),
                featured: formData.has('featured'),
                technologies: formData.get('technologies').split(',').map(t => t.trim()).filter(t => t)
            };

            try {
                const response = await fetch('/admin/api/projects', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(projectData)
                });

                if (response.ok) {
                    alert('Project added successfully!');
                    form.reset();
                    toggleForm('add-form');
                    refreshProjects();
                } else {
                    const error = await response.text();
                    alert('Error: ' + error);
                }
            } catch (error) {
                alert('Error adding project: ' + error.message);
            }
        }

        async function deleteProject(id) {
            if (!confirm('Are you sure you want to delete this project?')) return;

            try {
                const response = await fetch(`/admin/api/projects/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    alert('Project deleted successfully!');
                    refreshProjects();
                } else {
                    alert('Error deleting project');
                }
            } catch (error) {
                alert('Error: ' + error.message);
            }
        }

        async function editProject(id) {
            try {
                // Fetch the project data
                const response = await fetch(`/admin/api/projects/${id}`);
                if (!response.ok) {
                    alert('Error fetching project data');
                    return;
                }
                
                const project = await response.json();
                
                // Populate the edit form
                document.getElementById('edit-project-id').value = project.id;
                document.getElementById('edit-id').value = project.id;
                document.getElementById('edit-title').value = project.title;
                document.getElementById('edit-description').value = project.description;
                document.getElementById('edit-category').value = project.category;
                document.getElementById('edit-technologies').value = project.technologies.join(', ');
                document.getElementById('edit-featured').checked = project.featured;
                
                // Show the edit form
                showEditForm();
                
                // Scroll to edit form
                document.getElementById('edit-form').scrollIntoView({ behavior: 'smooth' });
                
            } catch (error) {
                alert('Error loading project: ' + error.message);
            }
        }

        function showEditForm() {
            const editForm = document.getElementById('edit-form');
            editForm.classList.add('active');
            
            // Hide add form if it's open
            const addForm = document.getElementById('add-form');
            addForm.classList.remove('active');
        }

        function hideEditForm() {
            const editForm = document.getElementById('edit-form');
            editForm.classList.remove('active');
            
            // Reset form
            document.getElementById('edit-project-form').reset();
        }

        async function handleEditSubmit(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            
            const projectId = formData.get('id');
            const projectData = {
                title: formData.get('title'),
                description: formData.get('description'),
                category: formData.get('category'),
                featured: formData.has('featured'),
                technologies: formData.get('technologies').split(',').map(t => t.trim()).filter(t => t)
            };

            try {
                const response = await fetch(`/admin/api/projects/${projectId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(projectData)
                });

                if (response.ok) {
                    alert('Project updated successfully!');
                    hideEditForm();
                    refreshProjects();
                } else {
                    const error = await response.text();
                    alert('Error: ' + error);
                }
            } catch (error) {
                alert('Error updating project: ' + error.message);
            }
        }

        function refreshProjects() {
            location.reload();
        }
    </script>
</body>
</html>
{{/if}}